[
  {
    "command": "editor.action.triggerSuggest",
    "key": "ctrl+space",
    "when": "editorTextFocus"
  },
  // VIM
  {
    "command": "editor.action.scrollLeftHover",
    "key": "h",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.scrollDownHover",
    "key": "j",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.scrollUpHover",
    "key": "k",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.scrollRightHover",
    "key": "l",
    "when": "editorHoverFocused"
  },
  {
    "command": "workbench.action.toggleEditorWidths",
    "key": "space s m",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "workbench.action.previousEditor",
    "key": "space shift+h",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "workbench.action.nextEditor",
    "key": "space shift+l",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  // Git
  {
    "command": "git.stage",
    "key": "space h s",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "git.stageSelectedRanges",
    "key": "space h s",
    "when": "vim.mode == 'VisualLine' && editorTextFocus"
  },
  {
    "command": "git.stageFile",
    "key": "space h shift+s",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "git.revertChange",
    "key": "space h r",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "git.revertSelectedRanges",
    "key": "space h r",
    "when": "vim.mode == 'VisualLine' && editorTextFocus"
  },
  {
    "command": "git.unstage",
    "key": "space h u",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "git.unstageSelectedRanges",
    "key": "space h u",
    "when": "vim.mode == 'VisualLine' && editorTextFocus"
  },
  {
    "command": "git.unstageFile",
    "key": "space h shift+u",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "git.stageAll",
    "key": "space h shift+a",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.editor.nextChange",
    "key": "space h j",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.editor.previousChange",
    "key": "space h k",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "git.commitStaged",
    "key": "space h c",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "git.commitStaged",
    "key": "space h shift+c",
    "when": "vim.mode == 'VisualLine' && editorTextFocus"
  },
  {
    "command": "git.commit.view.show",
    "ket": "space h v",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  // Navigation
  {
    "command": "workbench.action.navigateLeft",
    "key": "ctrl-h"
  },
  {
    "command": "workbench.action.navigateRight",
    "key": "ctrl-l"
  },
  {
    "command": "workbench.action.navigateUp",
    "key": "ctrl-k"
  },
  {
    "command": "workbench.action.navigateDown",
    "key": "ctrl-j"
  },
  {
    "command": "workbench.action.showAllEditors",
    "key": "space ,",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.files.action.focusFilesExplorer"
      ]
    },
    "command": "runCommands",
    "key": "space e",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !sideBarFocus"
  },
  {
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    "command": "runCommands",
    "key": "space e",
    "when": "sideBarFocus && !inputFocus"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "space e",
    "when": "vim.mode == 'Normal' && editorTextFocus && foldersViewVisible"
  },
  {
    "command": "workbench.action.splitEditor",
    "key": "space s h",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "workbench.action.splitEditorDown",
    "key": "space s v",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "workbench.action.closeActiveEditor",
    "key": "space x",
    "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
  },
  {
    "command": "workbench.action.closeEditorsInGroup",
    "key": "space q",
    "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
  },
  // Coding
  {
    "command": "editor.action.codeAction",
    "key": "space c a",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.moveLinesUpAction",
    "key": "shift+k",
    "when": "vim.mode == 'VisualLine' && editorTextFocus"
  },
  {
    "command": "editor.action.moveLinesDownAction",
    "key": "shift+j",
    "when": "vim.mode == 'VisualLine' && editorTextFocus"
  },
  {
    "command": "editor.action.showHover",
    "key": "shift+k",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.rename",
    "key": "space c r",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.gotoSymbol",
    "key": "space c s",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.closeActiveEditor",
    "key": "space b d",
    "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
  },
  {
    "command": "workbench.action.closeOtherEditors",
    "key": "space b o",
    "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
  },
  {
    "command": "workbench.action.quickOpen",
    "key": "space space",
    "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
  },
  {
    "command": "editor.action.revealDefinition",
    "key": "space g d",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.goToReferences",
    "key": "space g r",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.goToImplementation",
    "key": "space g i",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.findInFiles",
    "key": "space s g",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "args": {
      "commands": ["workbench.view.scm", "workbench.scm.focus"]
    },
    "command": "runCommands",
    "key": "space g g",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "editor.action.addSelectionToNextFindMatch",
    "key": "ctrl-n",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "editor.action.peekDefinition",
    "key": "space g p d",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.showDefinitionPreviewHover",
    "key": "space g h",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.goToImplementation",
    "key": "space g i",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.peekImplementation",
    "key": "space g p i",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.quickFix",
    "key": "space g q",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.referenceSearch.trigger",
    "key": "space g r",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.goToTypeDefinition",
    "key": "space g t",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.peekTypeDefinition",
    "key": "space g p t",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  // File Explorer
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.copy",
    "key": "c",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.paste",
    "key": "p",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.cut",
    "key": "x",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.newFile",
    "key": "a",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.openToSide",
    "key": "s",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "args": {
      "commands": [
        "workbench.action.splitEditorDown",
        "explorer.openAndPassFocus",
        "workbench.action.closeOtherEditors"
      ]
    },
    "command": "runCommands",
    "key": "shift+s",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.openAndPassFocus",
    "key": "enter",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "list.toggleExpand",
    "key": "enter",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus"
  },
  // Debug
  {
    "command": "workbench.action.debug.selectandstart",
    "key": "space d a",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && debuggersAvailable"
  },
  {
    "command": "workbench.action.debug.stop",
    "key": "space d t",
    "when": "vim.mode == 'Normal' && editorTextFocus && inDebugMode && !focusedSessionIsAttached"
  },
  {
    "command": "workbench.action.debug.stepOver",
    "key": "space d o",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped'"
  },
  {
    "command": "workbench.action.debug.stepInto",
    "key": "space d i",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped'"
  },
  {
    "command": "editor.debug.action.toggleBreakpoint",
    "key": "space d b",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.debug.action.showDebugHover",
    "key": "space d e",
    "when": "vim.mode == 'Normal' && editorTextFocus && inDebugMode && debugState == 'stopped'"
  },
  {
    "command": "workbench.action.debug.continue",
    "key": "space d c",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped'"
  },
  {
    "command": "workbench.action.debug.restart",
    "key": "space d r",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode"
  },
  // Remap
  {
    "command": "workbench.action.quickOpenSelectNext",
    "key": "ctrl+j",
    "when": "inQuickOpen"
  },
  {
    "command": "-workbench.action.quickOpenSelectNext",
    "key": "ctrl+n",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenSelectPrevious",
    "key": "ctrl+k",
    "when": "inQuickOpen"
  },
  {
    "command": "-workbench.action.quickOpenSelectPrevious",
    "key": "ctrl+p",
    "when": "inQuickOpen"
  },
  {
    "command": "selectNextCodeAction",
    "key": "ctrl+j",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "-selectNextCodeAction",
    "key": "ctrl+n",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "selectNextSuggestion",
    "key": "ctrl+j",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "-selectNextSuggestion",
    "key": "ctrl+n",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "showNextParameterHint",
    "key": "ctrl+j",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "-showNextParameterHint",
    "key": "ctrl+n",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "selectPrevCodeAction",
    "key": "ctrl+k",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "-selectPrevCodeAction",
    "key": "ctrl+p",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "selectPrevSuggestion",
    "key": "ctrl+k",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "-selectPrevSuggestion",
    "key": "ctrl+p",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  }
]
